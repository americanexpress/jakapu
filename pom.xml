<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2020 American Express Travel Related Services Company, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed under the License
  ~ is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
  ~ or implied. See the License for the specific language governing permissions and limitations under
  ~ the License.
  ~
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.americanexpress.jakapu</groupId>
    <artifactId>jakapu</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <name>Java Kafka Publisher</name>
    <description>Config Driven Java Spring based Kafka Publisher</description>

    <scm>
        <url>https://github.com/americanexpress/jakapu</url>
        <connection>scm:git:git://github.com/americanexpress/jakapu.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/americanexpress/jakapu.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/americanexpress/jakapu/issues</url>
    </issueManagement>

    <distributionManagement>
        <repository>
            <id>bintray-americanexpress-maven</id>
            <name>americanexpress-maven</name>
            <url>https://api.bintray.com/maven/americanexpress/maven/com.americanexpress.jakapu/;publish=1</url>
        </repository>
    </distributionManagement>

    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>https://github.com/americanexpress/jakapu/LICENSE.txt</url>
        </license>
    </licenses>

    <modules>
        <module>jakapu-core</module>
    </modules>

    <developers>
        <developer>
            <name>Swadhin (Dean) Jain</name>
            <email>swadhin.jain@aexp.com</email>
        </developer>
        <developer>
            <name>Sarmin Begam</name>
            <email>sarmin.begam@aexp.com</email>
        </developer>
        <developer>
            <name>Rahul Sharma</name>
            <email>rahul.sharma18@aexp.com</email>
        </developer>
    </developers>

    <properties>
        <license.dir>${basedir}</license.dir>
        <project.organization.name>American Express Travel Related Services Company, Inc.</project.organization.name>
        <project.inceptionYear>2020</project.inceptionYear>
        <founder-website>https://americanexpress.io/</founder-website>

        <log4j2.version>2.15.0</log4j2.version>
        <junit-jupiter.version>5.2.0</junit-jupiter.version>
        <spring-boot.version>2.1.2.RELEASE</spring-boot.version>
        <okhttp.version>3.12.0</okhttp.version>
        <commons-lang3.version>3.6</commons-lang3.version>
        <httpclient.version>4.5.5</httpclient.version>

        <!-- ============ maven build and release ============== -->
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
        <java.version>1.8</java.version>
        <maven-enforcer-plugin.version>1.3.1</maven-enforcer-plugin.version>
        <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
        <maven-source-plugin.version>2.4</maven-source-plugin.version>
        <maven-javadoc-plugin.version>2.10.3</maven-javadoc-plugin.version>
        <maven-site-plugin.version>3.3</maven-site-plugin.version>
        <maven-assembly-plugin.version>2.6</maven-assembly-plugin.version>
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>

    </properties>


    <dependencyManagement>
        <dependencies>

            <!-- Logging dependencies-->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j2.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j2.version}</version>
            </dependency>

            <!--Spring dependencies-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
            </dependency>

            <!--Unit testing dependency-->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>2.21.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito-junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.6</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>UTF-8</encoding>
                        <maxmem>1024m</maxmem>
                        <showWarnings>true</showWarnings>
                        <showDeprecation>true</showDeprecation>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>analyze-only</goal>
                            </goals>
                            <configuration>
                                <ignoreNonCompile>true</ignoreNonCompile>
                                <failOnWarning>false</failOnWarning>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireJavaVersion>
                                        <version>[1.8,)</version>
                                    </requireJavaVersion>
                                    <requireMavenVersion>
                                        <version>[3.0.3,)</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

</project>
